cloudProvider:
    dockerRegistryUrl: ''
    flavor: ''
    imagePullSecretName: ''
imagePullPolicy: 'Always'
environment: ''

podAnnotations: {}

S3:
    accessKey: ''
    secretAccessKey: ''
    endpoint: ''
    bucket: ''
    region: ''
    style: ''
    maxAttempts: 
    storageClass: ''

global:
  cloudProvider:
    dockerRegistryUrl: ''
    flavor: openshift
    imagePullSecretName: ''
  imagePullPolicy: Always

  ca:
    enabled: false
    useExternal: false
    secretName: 
    path: 
    key: 

  tracing: {}
  metrics: {}

  environment: development

  podAnnotations: {}

  providers:
    source: NFS
    destination: S3

  NFS:
    name: ''
    pv_path: ''
    sub_path: ''

  S3:
    accessKey: ''
    secretAccessKey: ''
    endpoint: ''
    bucket: ''
    region: ''
    style: ''
    maxAttempts: 
    storageClass: ''

  destinationNFS:
    name: ''
    pv_path: ''
    sub_path: ''

  sourceS3:
    accessKey: ''
    secretAccessKey: ''
    endpoint: ''
    bucket: ''
    region: ''
    style: ''
    maxAttempts: 
    storageClass: ''

  jobManager:
    url: ''
    ingestion:
      jobType: ''
      taskType: ''
    delete:
      jobType: ''
      taskType: ''
    heartbeat:
      url: ''
      pingingIntervalTime: 
    pollingIntervalTime: 
    maxAttempts: 

replicaCount: 1
revisionHistoryLimit: 5 # Amount of revisions we keep

image:
  repository: file-syncer
  tag: latest

extraVolumes: {}

extraVolumeMounts: {}

sidecars: {}

env:
  targetPort: 8080
  logLevel: info
  logPrettyPrintEnabled: false
  tracing:
    enabled: false
    url: ''
  metrics:
    enabled: false
    url: ''
  intervalMs: 3000
  taskPoolSize: 40

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness